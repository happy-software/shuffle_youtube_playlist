{"version":3,"file":"static/js/769.73f874aa.chunk.js","mappings":"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","sources":["../node_modules/media-tracks/dist/track-event.js","../node_modules/media-tracks/dist/utils.js","../node_modules/media-tracks/dist/video-track-list.js","../node_modules/media-tracks/dist/rendition-event.js","../node_modules/media-tracks/dist/video-rendition-list.js","../node_modules/media-tracks/dist/video-rendition.js","../node_modules/media-tracks/dist/video-track.js","../node_modules/media-tracks/dist/audio-rendition-list.js","../node_modules/media-tracks/dist/audio-rendition.js","../node_modules/media-tracks/dist/audio-track-list.js","../node_modules/media-tracks/dist/audio-track.js","../node_modules/media-tracks/dist/mixin.js"],"sourcesContent":["class TrackEvent extends Event {\n  track;\n  constructor(type, init) {\n    super(type);\n    this.track = init.track;\n  }\n}\nexport {\n  TrackEvent\n};\n","const privateProps = /* @__PURE__ */ new WeakMap();\nfunction getPrivate(instance) {\n  return privateProps.get(instance) ?? setPrivate(instance, {});\n}\nfunction setPrivate(instance, props) {\n  let saved = privateProps.get(instance);\n  if (!saved) privateProps.set(instance, saved = {});\n  return Object.assign(saved, props);\n}\nexport {\n  getPrivate,\n  setPrivate\n};\n","import { TrackEvent } from \"./track-event.js\";\nimport { getPrivate } from \"./utils.js\";\nfunction addVideoTrack(media, track) {\n  const trackList = media.videoTracks;\n  getPrivate(track).media = media;\n  if (!getPrivate(track).renditionSet) {\n    getPrivate(track).renditionSet = /* @__PURE__ */ new Set();\n  }\n  const trackSet = getPrivate(trackList).trackSet;\n  trackSet.add(track);\n  const index = trackSet.size - 1;\n  if (!(index in VideoTrackList.prototype)) {\n    Object.defineProperty(VideoTrackList.prototype, index, {\n      get() {\n        return [...getPrivate(this).trackSet][index];\n      }\n    });\n  }\n  queueMicrotask(() => {\n    trackList.dispatchEvent(new TrackEvent(\"addtrack\", { track }));\n  });\n}\nfunction removeVideoTrack(track) {\n  const trackList = getPrivate(track).media?.videoTracks;\n  if (!trackList) return;\n  const trackSet = getPrivate(trackList).trackSet;\n  trackSet.delete(track);\n  queueMicrotask(() => {\n    trackList.dispatchEvent(new TrackEvent(\"removetrack\", { track }));\n  });\n}\nfunction selectedChanged(selected) {\n  const trackList = getPrivate(selected).media.videoTracks ?? [];\n  let hasUnselected = false;\n  for (const track of trackList) {\n    if (track === selected) continue;\n    track.selected = false;\n    hasUnselected = true;\n  }\n  if (hasUnselected) {\n    if (getPrivate(trackList).changeRequested) return;\n    getPrivate(trackList).changeRequested = true;\n    queueMicrotask(() => {\n      delete getPrivate(trackList).changeRequested;\n      trackList.dispatchEvent(new Event(\"change\"));\n    });\n  }\n}\nclass VideoTrackList extends EventTarget {\n  #addTrackCallback;\n  #removeTrackCallback;\n  #changeCallback;\n  constructor() {\n    super();\n    getPrivate(this).trackSet = /* @__PURE__ */ new Set();\n  }\n  get #tracks() {\n    return getPrivate(this).trackSet;\n  }\n  [Symbol.iterator]() {\n    return this.#tracks.values();\n  }\n  get length() {\n    return this.#tracks.size;\n  }\n  getTrackById(id) {\n    return [...this.#tracks].find((track) => track.id === id) ?? null;\n  }\n  get selectedIndex() {\n    return [...this.#tracks].findIndex((track) => track.selected);\n  }\n  get onaddtrack() {\n    return this.#addTrackCallback;\n  }\n  set onaddtrack(callback) {\n    if (this.#addTrackCallback) {\n      this.removeEventListener(\"addtrack\", this.#addTrackCallback);\n      this.#addTrackCallback = void 0;\n    }\n    if (typeof callback == \"function\") {\n      this.#addTrackCallback = callback;\n      this.addEventListener(\"addtrack\", callback);\n    }\n  }\n  get onremovetrack() {\n    return this.#removeTrackCallback;\n  }\n  set onremovetrack(callback) {\n    if (this.#removeTrackCallback) {\n      this.removeEventListener(\"removetrack\", this.#removeTrackCallback);\n      this.#removeTrackCallback = void 0;\n    }\n    if (typeof callback == \"function\") {\n      this.#removeTrackCallback = callback;\n      this.addEventListener(\"removetrack\", callback);\n    }\n  }\n  get onchange() {\n    return this.#changeCallback;\n  }\n  set onchange(callback) {\n    if (this.#changeCallback) {\n      this.removeEventListener(\"change\", this.#changeCallback);\n      this.#changeCallback = void 0;\n    }\n    if (typeof callback == \"function\") {\n      this.#changeCallback = callback;\n      this.addEventListener(\"change\", callback);\n    }\n  }\n}\nexport {\n  VideoTrackList,\n  addVideoTrack,\n  removeVideoTrack,\n  selectedChanged\n};\n","class RenditionEvent extends Event {\n  rendition;\n  constructor(type, init) {\n    super(type);\n    this.rendition = init.rendition;\n  }\n}\nexport {\n  RenditionEvent\n};\n","import { RenditionEvent } from \"./rendition-event.js\";\nimport { getPrivate } from \"./utils.js\";\nfunction addRendition(track, rendition) {\n  const renditionList = getPrivate(track).media.videoRenditions;\n  getPrivate(rendition).media = getPrivate(track).media;\n  getPrivate(rendition).track = track;\n  const renditionSet = getPrivate(track).renditionSet;\n  renditionSet.add(rendition);\n  const index = renditionSet.size - 1;\n  if (!(index in VideoRenditionList.prototype)) {\n    Object.defineProperty(VideoRenditionList.prototype, index, {\n      get() {\n        return getCurrentRenditions(this)[index];\n      }\n    });\n  }\n  queueMicrotask(() => {\n    if (!track.selected) return;\n    renditionList.dispatchEvent(new RenditionEvent(\"addrendition\", { rendition }));\n  });\n}\nfunction removeRendition(rendition) {\n  const renditionList = getPrivate(rendition).media.videoRenditions;\n  const track = getPrivate(rendition).track;\n  const renditionSet = getPrivate(track).renditionSet;\n  renditionSet.delete(rendition);\n  queueMicrotask(() => {\n    const track2 = getPrivate(rendition).track;\n    if (!track2.selected) return;\n    renditionList.dispatchEvent(new RenditionEvent(\"removerendition\", { rendition }));\n  });\n}\nfunction selectedChanged(rendition) {\n  const renditionList = getPrivate(rendition).media.videoRenditions;\n  if (!renditionList || getPrivate(renditionList).changeRequested) return;\n  getPrivate(renditionList).changeRequested = true;\n  queueMicrotask(() => {\n    delete getPrivate(renditionList).changeRequested;\n    const track = getPrivate(rendition).track;\n    if (!track.selected) return;\n    renditionList.dispatchEvent(new Event(\"change\"));\n  });\n}\nfunction getCurrentRenditions(renditionList) {\n  const media = getPrivate(renditionList).media;\n  return [...media.videoTracks].filter((track) => track.selected).flatMap((track) => [...getPrivate(track).renditionSet]);\n}\nclass VideoRenditionList extends EventTarget {\n  #addRenditionCallback;\n  #removeRenditionCallback;\n  #changeCallback;\n  [Symbol.iterator]() {\n    return getCurrentRenditions(this).values();\n  }\n  get length() {\n    return getCurrentRenditions(this).length;\n  }\n  getRenditionById(id) {\n    return getCurrentRenditions(this).find((rendition) => `${rendition.id}` === `${id}`) ?? null;\n  }\n  get selectedIndex() {\n    return getCurrentRenditions(this).findIndex((rendition) => rendition.selected);\n  }\n  set selectedIndex(index) {\n    for (const [i, rendition] of getCurrentRenditions(this).entries()) {\n      rendition.selected = i === index;\n    }\n  }\n  get onaddrendition() {\n    return this.#addRenditionCallback;\n  }\n  set onaddrendition(callback) {\n    if (this.#addRenditionCallback) {\n      this.removeEventListener(\"addrendition\", this.#addRenditionCallback);\n      this.#addRenditionCallback = void 0;\n    }\n    if (typeof callback == \"function\") {\n      this.#addRenditionCallback = callback;\n      this.addEventListener(\"addrendition\", callback);\n    }\n  }\n  get onremoverendition() {\n    return this.#removeRenditionCallback;\n  }\n  set onremoverendition(callback) {\n    if (this.#removeRenditionCallback) {\n      this.removeEventListener(\"removerendition\", this.#removeRenditionCallback);\n      this.#removeRenditionCallback = void 0;\n    }\n    if (typeof callback == \"function\") {\n      this.#removeRenditionCallback = callback;\n      this.addEventListener(\"removerendition\", callback);\n    }\n  }\n  get onchange() {\n    return this.#changeCallback;\n  }\n  set onchange(callback) {\n    if (this.#changeCallback) {\n      this.removeEventListener(\"change\", this.#changeCallback);\n      this.#changeCallback = void 0;\n    }\n    if (typeof callback == \"function\") {\n      this.#changeCallback = callback;\n      this.addEventListener(\"change\", callback);\n    }\n  }\n}\nexport {\n  VideoRenditionList,\n  addRendition,\n  removeRendition,\n  selectedChanged\n};\n","import { selectedChanged } from \"./video-rendition-list.js\";\nclass VideoRendition {\n  src;\n  id;\n  width;\n  height;\n  bitrate;\n  frameRate;\n  codec;\n  #selected = false;\n  get selected() {\n    return this.#selected;\n  }\n  set selected(val) {\n    if (this.#selected === val) return;\n    this.#selected = val;\n    selectedChanged(this);\n  }\n}\nexport {\n  VideoRendition\n};\n","import { selectedChanged } from \"./video-track-list.js\";\nimport { VideoRendition } from \"./video-rendition.js\";\nimport { addRendition, removeRendition } from \"./video-rendition-list.js\";\nconst VideoTrackKind = {\n  alternative: \"alternative\",\n  captions: \"captions\",\n  main: \"main\",\n  sign: \"sign\",\n  subtitles: \"subtitles\",\n  commentary: \"commentary\"\n};\nclass VideoTrack {\n  id;\n  kind;\n  label = \"\";\n  language = \"\";\n  sourceBuffer;\n  #selected = false;\n  addRendition(src, width, height, codec, bitrate, frameRate) {\n    const rendition = new VideoRendition();\n    rendition.src = src;\n    rendition.width = width;\n    rendition.height = height;\n    rendition.frameRate = frameRate;\n    rendition.bitrate = bitrate;\n    rendition.codec = codec;\n    addRendition(this, rendition);\n    return rendition;\n  }\n  removeRendition(rendition) {\n    removeRendition(rendition);\n  }\n  get selected() {\n    return this.#selected;\n  }\n  set selected(val) {\n    if (this.#selected === val) return;\n    this.#selected = val;\n    if (val !== true) return;\n    selectedChanged(this);\n  }\n}\nexport {\n  VideoTrack,\n  VideoTrackKind\n};\n","import { RenditionEvent } from \"./rendition-event.js\";\nimport { getPrivate } from \"./utils.js\";\nfunction addRendition(track, rendition) {\n  const renditionList = getPrivate(track).media.audioRenditions;\n  getPrivate(rendition).media = getPrivate(track).media;\n  getPrivate(rendition).track = track;\n  const renditionSet = getPrivate(track).renditionSet;\n  renditionSet.add(rendition);\n  const index = renditionSet.size - 1;\n  if (!(index in AudioRenditionList.prototype)) {\n    Object.defineProperty(AudioRenditionList.prototype, index, {\n      get() {\n        return getCurrentRenditions(this)[index];\n      }\n    });\n  }\n  queueMicrotask(() => {\n    if (!track.enabled) return;\n    renditionList.dispatchEvent(new RenditionEvent(\"addrendition\", { rendition }));\n  });\n}\nfunction removeRendition(rendition) {\n  const renditionList = getPrivate(rendition).media.audioRenditions;\n  const track = getPrivate(rendition).track;\n  const renditionSet = getPrivate(track).renditionSet;\n  renditionSet.delete(rendition);\n  queueMicrotask(() => {\n    const track2 = getPrivate(rendition).track;\n    if (!track2.enabled) return;\n    renditionList.dispatchEvent(new RenditionEvent(\"removerendition\", { rendition }));\n  });\n}\nfunction selectedChanged(rendition) {\n  const renditionList = getPrivate(rendition).media.audioRenditions;\n  if (!renditionList || getPrivate(renditionList).changeRequested) return;\n  getPrivate(renditionList).changeRequested = true;\n  queueMicrotask(() => {\n    delete getPrivate(renditionList).changeRequested;\n    const track = getPrivate(rendition).track;\n    if (!track.enabled) return;\n    renditionList.dispatchEvent(new Event(\"change\"));\n  });\n}\nfunction getCurrentRenditions(renditionList) {\n  const media = getPrivate(renditionList).media;\n  return [...media.audioTracks].filter((track) => track.enabled).flatMap((track) => [...getPrivate(track).renditionSet]);\n}\nclass AudioRenditionList extends EventTarget {\n  #addRenditionCallback;\n  #removeRenditionCallback;\n  #changeCallback;\n  [Symbol.iterator]() {\n    return getCurrentRenditions(this).values();\n  }\n  get length() {\n    return getCurrentRenditions(this).length;\n  }\n  getRenditionById(id) {\n    return getCurrentRenditions(this).find((rendition) => `${rendition.id}` === `${id}`) ?? null;\n  }\n  get selectedIndex() {\n    return getCurrentRenditions(this).findIndex((rendition) => rendition.selected);\n  }\n  set selectedIndex(index) {\n    for (const [i, rendition] of getCurrentRenditions(this).entries()) {\n      rendition.selected = i === index;\n    }\n  }\n  get onaddrendition() {\n    return this.#addRenditionCallback;\n  }\n  set onaddrendition(callback) {\n    if (this.#addRenditionCallback) {\n      this.removeEventListener(\"addrendition\", this.#addRenditionCallback);\n      this.#addRenditionCallback = void 0;\n    }\n    if (typeof callback == \"function\") {\n      this.#addRenditionCallback = callback;\n      this.addEventListener(\"addrendition\", callback);\n    }\n  }\n  get onremoverendition() {\n    return this.#removeRenditionCallback;\n  }\n  set onremoverendition(callback) {\n    if (this.#removeRenditionCallback) {\n      this.removeEventListener(\"removerendition\", this.#removeRenditionCallback);\n      this.#removeRenditionCallback = void 0;\n    }\n    if (typeof callback == \"function\") {\n      this.#removeRenditionCallback = callback;\n      this.addEventListener(\"removerendition\", callback);\n    }\n  }\n  get onchange() {\n    return this.#changeCallback;\n  }\n  set onchange(callback) {\n    if (this.#changeCallback) {\n      this.removeEventListener(\"change\", this.#changeCallback);\n      this.#changeCallback = void 0;\n    }\n    if (typeof callback == \"function\") {\n      this.#changeCallback = callback;\n      this.addEventListener(\"change\", callback);\n    }\n  }\n}\nexport {\n  AudioRenditionList,\n  addRendition,\n  removeRendition,\n  selectedChanged\n};\n","import { selectedChanged } from \"./audio-rendition-list.js\";\nclass AudioRendition {\n  src;\n  id;\n  bitrate;\n  codec;\n  #selected = false;\n  get selected() {\n    return this.#selected;\n  }\n  set selected(val) {\n    if (this.#selected === val) return;\n    this.#selected = val;\n    selectedChanged(this);\n  }\n}\nexport {\n  AudioRendition\n};\n","import { TrackEvent } from \"./track-event.js\";\nimport { getPrivate } from \"./utils.js\";\nfunction addAudioTrack(media, track) {\n  const trackList = media.audioTracks;\n  getPrivate(track).media = media;\n  if (!getPrivate(track).renditionSet) {\n    getPrivate(track).renditionSet = /* @__PURE__ */ new Set();\n  }\n  const trackSet = getPrivate(trackList).trackSet;\n  trackSet.add(track);\n  const index = trackSet.size - 1;\n  if (!(index in AudioTrackList.prototype)) {\n    Object.defineProperty(AudioTrackList.prototype, index, {\n      get() {\n        return [...getPrivate(this).trackSet][index];\n      }\n    });\n  }\n  queueMicrotask(() => {\n    trackList.dispatchEvent(new TrackEvent(\"addtrack\", { track }));\n  });\n}\nfunction removeAudioTrack(track) {\n  const trackList = getPrivate(track).media?.audioTracks;\n  if (!trackList) return;\n  const trackSet = getPrivate(trackList).trackSet;\n  trackSet.delete(track);\n  queueMicrotask(() => {\n    trackList.dispatchEvent(new TrackEvent(\"removetrack\", { track }));\n  });\n}\nfunction enabledChanged(track) {\n  const trackList = getPrivate(track).media.audioTracks;\n  if (!trackList || getPrivate(trackList).changeRequested) return;\n  getPrivate(trackList).changeRequested = true;\n  queueMicrotask(() => {\n    delete getPrivate(trackList).changeRequested;\n    trackList.dispatchEvent(new Event(\"change\"));\n  });\n}\nclass AudioTrackList extends EventTarget {\n  #addTrackCallback;\n  #removeTrackCallback;\n  #changeCallback;\n  constructor() {\n    super();\n    getPrivate(this).trackSet = /* @__PURE__ */ new Set();\n  }\n  get #tracks() {\n    return getPrivate(this).trackSet;\n  }\n  [Symbol.iterator]() {\n    return this.#tracks.values();\n  }\n  get length() {\n    return this.#tracks.size;\n  }\n  getTrackById(id) {\n    return [...this.#tracks].find((track) => track.id === id) ?? null;\n  }\n  get onaddtrack() {\n    return this.#addTrackCallback;\n  }\n  set onaddtrack(callback) {\n    if (this.#addTrackCallback) {\n      this.removeEventListener(\"addtrack\", this.#addTrackCallback);\n      this.#addTrackCallback = void 0;\n    }\n    if (typeof callback == \"function\") {\n      this.#addTrackCallback = callback;\n      this.addEventListener(\"addtrack\", callback);\n    }\n  }\n  get onremovetrack() {\n    return this.#removeTrackCallback;\n  }\n  set onremovetrack(callback) {\n    if (this.#removeTrackCallback) {\n      this.removeEventListener(\"removetrack\", this.#removeTrackCallback);\n      this.#removeTrackCallback = void 0;\n    }\n    if (typeof callback == \"function\") {\n      this.#removeTrackCallback = callback;\n      this.addEventListener(\"removetrack\", callback);\n    }\n  }\n  get onchange() {\n    return this.#changeCallback;\n  }\n  set onchange(callback) {\n    if (this.#changeCallback) {\n      this.removeEventListener(\"change\", this.#changeCallback);\n      this.#changeCallback = void 0;\n    }\n    if (typeof callback == \"function\") {\n      this.#changeCallback = callback;\n      this.addEventListener(\"change\", callback);\n    }\n  }\n}\nexport {\n  AudioTrackList,\n  addAudioTrack,\n  enabledChanged,\n  removeAudioTrack\n};\n","import { AudioRendition } from \"./audio-rendition.js\";\nimport { enabledChanged } from \"./audio-track-list.js\";\nimport { addRendition, removeRendition } from \"./audio-rendition-list.js\";\nconst AudioTrackKind = {\n  alternative: \"alternative\",\n  descriptions: \"descriptions\",\n  main: \"main\",\n  \"main-desc\": \"main-desc\",\n  translation: \"translation\",\n  commentary: \"commentary\"\n};\nclass AudioTrack {\n  id;\n  kind;\n  label = \"\";\n  language = \"\";\n  sourceBuffer;\n  #enabled = false;\n  addRendition(src, codec, bitrate) {\n    const rendition = new AudioRendition();\n    rendition.src = src;\n    rendition.codec = codec;\n    rendition.bitrate = bitrate;\n    addRendition(this, rendition);\n    return rendition;\n  }\n  removeRendition(rendition) {\n    removeRendition(rendition);\n  }\n  get enabled() {\n    return this.#enabled;\n  }\n  set enabled(val) {\n    if (this.#enabled === val) return;\n    this.#enabled = val;\n    enabledChanged(this);\n  }\n}\nexport {\n  AudioTrack,\n  AudioTrackKind\n};\n","import { VideoTrack } from \"./video-track.js\";\nimport { VideoTrackList, addVideoTrack, removeVideoTrack } from \"./video-track-list.js\";\nimport { AudioTrack } from \"./audio-track.js\";\nimport { AudioTrackList, addAudioTrack, removeAudioTrack } from \"./audio-track-list.js\";\nimport { VideoRenditionList } from \"./video-rendition-list.js\";\nimport { AudioRenditionList } from \"./audio-rendition-list.js\";\nimport { getPrivate } from \"./utils.js\";\nconst nativeVideoTracksFn = getBaseMediaTracksFn(globalThis.HTMLMediaElement, \"video\");\nconst nativeAudioTracksFn = getBaseMediaTracksFn(globalThis.HTMLMediaElement, \"audio\");\nfunction MediaTracksMixin(MediaElementClass) {\n  if (!MediaElementClass?.prototype) return MediaElementClass;\n  const videoTracksFn = getBaseMediaTracksFn(MediaElementClass, \"video\");\n  if (!videoTracksFn || `${videoTracksFn}`.includes(\"[native code]\")) {\n    Object.defineProperty(MediaElementClass.prototype, \"videoTracks\", {\n      get() {\n        return getVideoTracks(this);\n      }\n    });\n  }\n  const audioTracksFn = getBaseMediaTracksFn(MediaElementClass, \"audio\");\n  if (!audioTracksFn || `${audioTracksFn}`.includes(\"[native code]\")) {\n    Object.defineProperty(MediaElementClass.prototype, \"audioTracks\", {\n      get() {\n        return getAudioTracks(this);\n      }\n    });\n  }\n  if (!(\"addVideoTrack\" in MediaElementClass.prototype)) {\n    MediaElementClass.prototype.addVideoTrack = function(kind, label = \"\", language = \"\") {\n      const track = new VideoTrack();\n      track.kind = kind;\n      track.label = label;\n      track.language = language;\n      addVideoTrack(this, track);\n      return track;\n    };\n  }\n  if (!(\"removeVideoTrack\" in MediaElementClass.prototype)) {\n    MediaElementClass.prototype.removeVideoTrack = removeVideoTrack;\n  }\n  if (!(\"addAudioTrack\" in MediaElementClass.prototype)) {\n    MediaElementClass.prototype.addAudioTrack = function(kind, label = \"\", language = \"\") {\n      const track = new AudioTrack();\n      track.kind = kind;\n      track.label = label;\n      track.language = language;\n      addAudioTrack(this, track);\n      return track;\n    };\n  }\n  if (!(\"removeAudioTrack\" in MediaElementClass.prototype)) {\n    MediaElementClass.prototype.removeAudioTrack = removeAudioTrack;\n  }\n  if (!(\"videoRenditions\" in MediaElementClass.prototype)) {\n    Object.defineProperty(MediaElementClass.prototype, \"videoRenditions\", {\n      get() {\n        return initVideoRenditions(this);\n      }\n    });\n  }\n  const initVideoRenditions = (media) => {\n    let renditions = getPrivate(media).videoRenditions;\n    if (!renditions) {\n      renditions = new VideoRenditionList();\n      getPrivate(renditions).media = media;\n      getPrivate(media).videoRenditions = renditions;\n    }\n    return renditions;\n  };\n  if (!(\"audioRenditions\" in MediaElementClass.prototype)) {\n    Object.defineProperty(MediaElementClass.prototype, \"audioRenditions\", {\n      get() {\n        return initAudioRenditions(this);\n      }\n    });\n  }\n  const initAudioRenditions = (media) => {\n    let renditions = getPrivate(media).audioRenditions;\n    if (!renditions) {\n      renditions = new AudioRenditionList();\n      getPrivate(renditions).media = media;\n      getPrivate(media).audioRenditions = renditions;\n    }\n    return renditions;\n  };\n  return MediaElementClass;\n}\nfunction getBaseMediaTracksFn(MediaElementClass, type) {\n  if (MediaElementClass?.prototype) {\n    return Object.getOwnPropertyDescriptor(MediaElementClass.prototype, `${type}Tracks`)?.get;\n  }\n}\nfunction getVideoTracks(media) {\n  let tracks = getPrivate(media).videoTracks;\n  if (!tracks) {\n    tracks = new VideoTrackList();\n    getPrivate(media).videoTracks = tracks;\n    if (nativeVideoTracksFn) {\n      const nativeTracks = nativeVideoTracksFn.call(media.nativeEl ?? media);\n      for (const nativeTrack of nativeTracks) {\n        addVideoTrack(media, nativeTrack);\n      }\n      nativeTracks.addEventListener(\"change\", () => {\n        tracks.dispatchEvent(new Event(\"change\"));\n      });\n      nativeTracks.addEventListener(\"addtrack\", (event) => {\n        if ([...tracks].some((t) => t instanceof VideoTrack)) {\n          for (const nativeTrack of nativeTracks) {\n            removeVideoTrack(nativeTrack);\n          }\n          return;\n        }\n        addVideoTrack(media, event.track);\n      });\n      nativeTracks.addEventListener(\"removetrack\", (event) => {\n        removeVideoTrack(event.track);\n      });\n    }\n  }\n  return tracks;\n}\nfunction getAudioTracks(media) {\n  let tracks = getPrivate(media).audioTracks;\n  if (!tracks) {\n    tracks = new AudioTrackList();\n    getPrivate(media).audioTracks = tracks;\n    if (nativeAudioTracksFn) {\n      const nativeTracks = nativeAudioTracksFn.call(media.nativeEl ?? media);\n      for (const nativeTrack of nativeTracks) {\n        addAudioTrack(media, nativeTrack);\n      }\n      nativeTracks.addEventListener(\"change\", () => {\n        tracks.dispatchEvent(new Event(\"change\"));\n      });\n      nativeTracks.addEventListener(\"addtrack\", (event) => {\n        if ([...tracks].some((t) => t instanceof AudioTrack)) {\n          for (const nativeTrack of nativeTracks) {\n            removeAudioTrack(nativeTrack);\n          }\n          return;\n        }\n        addAudioTrack(media, event.track);\n      });\n      nativeTracks.addEventListener(\"removetrack\", (event) => {\n        removeAudioTrack(event.track);\n      });\n    }\n  }\n  return tracks;\n}\nexport {\n  MediaTracksMixin\n};\n"],"names":["TrackEvent","type","init","track","Event","privateProps","WeakMap","getPrivate","instance","get","props","saved","set","Object","assign","setPrivate","addVideoTrack","media","trackList","videoTracks","renditionSet","Set","trackSet","add","index","size","VideoTrackList","prototype","defineProperty","this","queueMicrotask","dispatchEvent","removeVideoTrack","delete","Symbol","iterator","values","id","find","findIndex","selected","callback","removeEventListener","addEventListener","EventTarget","RenditionEvent","rendition","getCurrentRenditions","renditionList","filter","flatMap","VideoRenditionList","length","entries","i","VideoRendition","val","videoRenditions","changeRequested","selectedChanged","VideoTrack","src","width","height","codec","bitrate","frameRate","addRendition","removeRendition","hasUnselected","audioTracks","enabled","AudioRenditionList","AudioRendition","audioRenditions","addAudioTrack","AudioTrackList","removeAudioTrack","AudioTrack","enabledChanged","nativeVideoTracksFn","getBaseMediaTracksFn","globalThis","HTMLMediaElement","nativeAudioTracksFn","MediaTracksMixin","MediaElementClass","videoTracksFn","includes","tracks","nativeTracks","call","nativeEl","nativeTrack","event","some","t","getVideoTracks","audioTracksFn","getAudioTracks","kind","label","language","initVideoRenditions","renditions","initAudioRenditions","getOwnPropertyDescriptor"],"sourceRoot":""}