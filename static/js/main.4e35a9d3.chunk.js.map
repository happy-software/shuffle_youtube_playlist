{"version":3,"sources":["AppConstants.js","components/ToggleableButton.js","components/ButtonList.js","components/Player.js","components/PlaylistSelectorItem.js","components/PlaylistSelector.js","components/VideoTitleDisplay.js","components/VideoPool.js","components/CurrentVideoInfo.jsx","pages/ShufflePlayer.js","pages/TrackPlaylistForm.js","pages/PlaylistsManager.jsx","pages/PlaylistsSearch.jsx","AppRoot.js","index.js"],"names":["APIRoot","APIEndpoints","SHUFFLE","TRACKED_PLAYLISTS","TRACKED_VIDEOS","ToggleableButton","props","className","toggled","onClick","setToggled","message","ButtonList","pickPreviousVideo","repeatVideo","setRepeatVideo","pickNextVideo","to","type","target","rel","Player","url","videoId","controls","onReady","event","onEnded","onEnd","onError","console","log","JSON","stringify","playing","width","height","config","youtube","playerVars","embedOptions","host","attributes","tracks","PlaylistSelectorItem","value","checked","onChange","onCheckboxChange","label","PlaylistSelector","id","playlists","map","p","key","playlist_id","name","is_default","onShuffle","onSelectNone","VideoTitleDisplay","onVideoClicked","style","flex","title","paddingLeft","href","alt","src","VideoPool","useState","isCollapsedDefault","videoPoolCollapsed","setVideoPoolCollapsed","playedVideos","videos","slice","reverse","video","index","video_id","CurrentVideoInfo","videoInfoCollapsed","setVideoInfoCollapsed","currentVideo","description","ShufflePlayer","loadedPlaylists","setLoadedPlaylists","loadedVideos","setLoadedVideos","setCurrentVideo","setPlayedVideos","loadVideos","requestBody","playlist_ids","filter","axios","post","AppConstants","then","response","data","songs","catch","error","length","nextVideo","v","Math","floor","random","concat","useEffect","get","togglePlaylistId","toggledOnePlaylist","togglePlaylistSelection","selectedNoPlaylists","Array","isArray","TrackPlaylistForm","state","handleInputChange","bind","handleSubmit","this","setState","preventDefault","e","onSubmit","placeholder","React","Component","PlaylistsManager","List","queryString","list","item","toLowerCase","toString","search","matchingItem","PlaylistsSearch","setQueryString","AppRoot","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4e35a9d3.chunk.js","sourcesContent":["// let APIRoot = \"http://localhost:8000\"; // When running locally\nlet APIRoot = \"https://happy-youtube-watcher.herokuapp.com\";\nexport default {\n  APIEndpoints: {\n    SHUFFLE: APIRoot + \"/shuffle\",\n    TRACKED_PLAYLISTS: APIRoot + \"/tracked-playlists\",\n    TRACKED_VIDEOS:    APIRoot + \"/videos\",\n  },\n};","import React from 'react';\n\nfunction ToggleableButton(props) {\n  return (\n    <button\n      className={`${props.className}${props.toggled?' toggled':''}`}\n      onClick={() => props.setToggled(!props.toggled)}\n    >{props.message}</button>\n  )\n}\n\nexport default ToggleableButton;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport ToggleableButton from './ToggleableButton';\n\nfunction ButtonList(props) {\n  return (\n    <div className=\"buttonList\">\n      <div>\n        <button\n          onClick={props.pickPreviousVideo}\n          className='buttonListButton'\n        >Previous Video</button>\n        <ToggleableButton\n          toggled={props.repeatVideo}\n          setToggled={props.setRepeatVideo}\n          message=\"Repeat Video\"\n          className=\"buttonListButton\"\n        />\n        <button\n          onClick={props.pickNextVideo}\n          className='buttonListButton'\n        >Next Video</button>\n        <Link\n          to=\"/track-new-playlist\"\n          className=\"link\">\n          <button\n            type=\"button\"\n            className=\"buttonListButton\"\n          >Track New Playlist</button>\n        </Link>\n        <Link\n          to=\"/search\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"link\">\n          <button\n            type=\"button\"\n            className=\"buttonListButton\"\n          >Search</button>\n        </Link>\n      </div>\n    </div>\n  )\n}\n\nexport default ButtonList;","import React from 'react';\nimport ReactPlayer from 'react-player/youtube';\n\nfunction Player(props) {\n  function onReady(event) {\n    // no-op\n  }\n\n  function onError(event) {\n    console.log(`BROKEN VIDEO: ${JSON.stringify(props.videoId, null, 2)}`)\n    props.onEnd()\n  }\n\n  return(<ReactPlayer\n    url={`https://www.youtube.com/watch?v=${props.videoId}`}\n    controls={true}\n    onReady={(event) => onReady(event)}\n    onEnded={() => props.onEnd()}\n    onError={() => onError()}\n    playing={true}\n    width={\"100%\"}\n    height={\"800px\"}\n    config={{\n      youtube: {\n        playerVars: {},\n        embedOptions: {\n          host: \"https://www.youtube-nocookie.com\",\n        }\n      },\n      attributes: {},\n      tracks: [],\n    }}\n  />);\n}\n\nexport default Player;","import React from 'react';\n\nfunction PlaylistSelectorItem(props) {\n  return (\n    <div className=\"playlistSelectorItem\">\n      <label className=\"checkbox_label\">\n        <input \n          type=\"checkbox\"\n          value={props.value}\n          checked={props.checked}\n          onChange={() => props.onCheckboxChange(props.value)}\n          className=\"checkbox_input\"\n        />{props.label}</label>\n    </div>\n  )\n}\n\nexport default PlaylistSelectorItem;","import React from 'react';\nimport PlaylistSelectorItem from './PlaylistSelectorItem';\n\nfunction PlaylistSelector(props) {\n  return (\n    <div id=\"playlistSelector\" className=\"playlistSelector\">\n      <div className=\"playlistSelectorTitle\">Available Playlists</div>\n      <div className=\"playlistSelectorInner\">\n        {props.playlists.map(p =>\n          <PlaylistSelectorItem\n          key={p.playlist_id}\n          label={p.name}\n          value={p.playlist_id}\n          checked={p.is_default}\n          onCheckboxChange={(playlist_id) => props.onCheckboxChange(playlist_id)}\n          />\n        )}\n      </div>\n      <button \n        onClick={() => props.onShuffle()}\n        className=\"playlistSelectorButton\"\n      >Combine Playlists</button>\n      <button \n        onClick={() => props.onSelectNone()}\n        className=\"playlistSelectorButton\"\n      >Select None</button>\n    </div>\n  );\n}\n\nexport default PlaylistSelector;","import React from 'react';\n\nfunction VideoTitleDisplay(props) {\n  const titleOpts = {\n    flex: 1\n  }\n  const anchorOpts = {\n    paddingLeft: 3, \n    flex: 0\n  }\n\n  return (\n    <div \n      id=\"videoTitleDisplay\" \n      onClick={() => props.onVideoClicked(props.videoId)}\n      className={`${props.className}`}\n    >\n      <div style={titleOpts}>{props.title}</div>\n      <a \n        style={anchorOpts} \n        href={`https://youtube.com/watch?v=${props.videoId}`}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <img alt='Go to Youtube' src={'/arrow-up-right.svg'}></img>\n      </a>\n    </div>\n  );\n}\n\nexport default VideoTitleDisplay;","import React, { useState }  from 'react';\nimport VideoTitleDisplay from './VideoTitleDisplay';\n\nfunction VideoPool(props) {\n  const [videoPoolCollapsed, setVideoPoolCollapsed] = useState(props.isCollapsedDefault);\n  const playedVideos = props.videos.slice().reverse();\n\n  return (\n    <div className={`videoPool`}>\n      <div \n        className={`videoPoolTitle`} \n        onClick={() => setVideoPoolCollapsed(!videoPoolCollapsed)}\n      >Video History (Expand/Collapse)</div>\n\n      <div className={`videoPoolList ${videoPoolCollapsed ?'hide' : ''}`}>\n        {\n        playedVideos.map((video, index) =>\n          <VideoTitleDisplay \n            key={index}\n            videoId={video.video_id} \n            title={video.title}\n            onVideoClicked={(videoId) => props.onVideoClicked(videoId)}\n            className={`videoPoolItem`} \n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default VideoPool;","import React, { useState }  from 'react';\n\nfunction CurrentVideoInfo(props) {\n  const titleOpts = {\n    flex: 1\n  }\n  const anchorOpts = {\n    paddingLeft: 3, \n    flex: 0\n  }\n\n  const [videoInfoCollapsed, setVideoInfoCollapsed] = useState(true);\n\n  return(\n    <>\n    <div id=\"videoTitleDisplay\" className='currentVideoTitle contentRow' onClick={() => setVideoInfoCollapsed(!videoInfoCollapsed)}>\n      <div style={titleOpts}>{props.currentVideo.title}</div>\n      <a style={anchorOpts} href={`https://youtube.com/watch?v=${props.currentVideo.video_id}`} target=\"_blank\" rel=\"noopener noreferrer\">\n        <img alt='Go to Youtube' src={'/arrow-up-right.svg'}></img>\n      </a>\n    </div>\n\n    <div className=\"contentRow\">\n      <div className={`${videoInfoCollapsed ? 'hide' : ''}`}>\n        {props.currentVideo.description}\n      </div>\n    </div>\n    </>\n  );\n}\n\nexport default CurrentVideoInfo;","import React, { useState, useEffect }  from 'react';\nimport axios from 'axios';\nimport AppConstants from '../AppConstants';\nimport ButtonList from '../components/ButtonList';\nimport Player from '../components/Player';\nimport PlaylistSelector from '../components/PlaylistSelector';\nimport VideoPool from '../components/VideoPool';\nimport CurrentVideoInfo from '../components/CurrentVideoInfo';\n\nfunction ShufflePlayer(props) {\n  const [loadedPlaylists, setLoadedPlaylists] = useState([]);\n  const [loadedVideos, setLoadedVideos] = useState([]);\n  const [currentVideo, setCurrentVideo] = useState({});\n  const [playedVideos, setPlayedVideos] = useState([]);\n  const [repeatVideo, setRepeatVideo] = useState(false);\n\n  function loadPlaylists() {\n    axios.get(AppConstants.APIEndpoints.TRACKED_PLAYLISTS)\n    .then(response => setLoadedPlaylists(response.data))\n    .catch(error => console.log(`Couldn't retrieve tracked playlists! ${error}`))\n  }\n\n  function loadVideos() {\n    const playlistIdsToLoad = loadedPlaylists\n      .filter(p => p.is_default)\n      .map(p => p.playlist_id);\n    const requestBody = { playlist_ids: playlistIdsToLoad };\n    axios.post(AppConstants.APIEndpoints.SHUFFLE, requestBody)\n    .then(response => setLoadedVideos(response.data.songs))\n    .catch(error => console.log(`Couldn't retrieve playlist videos! ${error}`))\n  }\n\n  function togglePlaylistSelection(togglePlaylistId) {\n    const toggledOnePlaylist = loadedPlaylists.map(p => { \n      return p.playlist_id === togglePlaylistId ? \n        { ...p, is_default: !p.is_default } : p});\n    setLoadedPlaylists(toggledOnePlaylist);\n  }\n\n  function onSelectNone() {\n    const selectedNoPlaylists = loadedPlaylists.map(p => { \n      return { ...p, is_default: false }});\n    setLoadedPlaylists(selectedNoPlaylists);\n  }\n\n  function pickPreviousVideo() {\n    if (!Array.isArray(playedVideos) || playedVideos.length <= 1) { return; }\n    const nextVideo = playedVideos[playedVideos.length - 2];\n    setCurrentVideo(nextVideo);\n    setPlayedVideos(playedVideos.concat(nextVideo))\n    console.log(`${playedVideos.length}: https://youtube.com/watch?v=${nextVideo.video_id}\\t${nextVideo.title}`);\n  }\n\n  function randomVideoIndex() {\n    return Math.floor(Math.random()*loadedVideos.length) % loadedVideos.length;\n  }\n\n  function pickNextVideo(videoId) {\n    if (!loadedVideos.length) { return; }\n    if (repeatVideo) { \n      setCurrentVideo(currentVideo);\n      return;\n    }\n    const nextVideo = !!videoId ? \n      loadedVideos.filter(v => v.video_id === videoId)[0] :\n      loadedVideos[randomVideoIndex()];\n\n    setCurrentVideo(nextVideo);\n    setPlayedVideos(playedVideos.concat(nextVideo))\n  }\n\n  useEffect(loadVideos, []);\n  useEffect(loadPlaylists, []);\n  useEffect(pickNextVideo, [loadedVideos]);\n\n\n  return (\n    <div>\n      <Player videoId={currentVideo.video_id} onEnd={() => pickNextVideo()} />\n      <CurrentVideoInfo currentVideo={currentVideo} />\n\n      <div className='contentRow'>\n        <PlaylistSelector \n          playlists={loadedPlaylists} \n          onCheckboxChange={(playlist_id) => togglePlaylistSelection(playlist_id)}\n          onShuffle={() => loadVideos()}\n          onSelectNone={() => onSelectNone()}\n          className='playlistSelector'\n        />\n        <VideoPool \n          videos={playedVideos}\n          currentVideo={currentVideo}\n          setCurrentVideo={setCurrentVideo}\n          isCollapsedDefault={false}\n          onVideoClicked={(videoId) => pickNextVideo(videoId)}\n        />\n        <ButtonList \n          repeatVideo={repeatVideo}\n          setRepeatVideo={setRepeatVideo}\n          pickNextVideo={() => pickNextVideo()}\n          pickPreviousVideo={() => pickPreviousVideo()}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default ShufflePlayer;\n","import React from \"react\";\nimport {Redirect} from 'react-router-dom'\nimport axios from 'axios';\nimport AppConstants from '../AppConstants';\n\nclass TrackPlaylistForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      playlist_id: '',\n      is_default: true,\n    }\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit      = this.handleSubmit.bind(this);\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value  = target.name === 'is_default' ? target.checked : target.value;\n    const name   = target.name;\n\n    this.setState({[name]: value});\n  }\n\n  handleSubmit(event) {\n    console.log(\"Submitting to server!\");\n    event.preventDefault();\n    axios.post(AppConstants.APIEndpoints.TRACKED_PLAYLISTS, {playlist_id: this.state.playlist_id, is_default: this.state.is_default})\n      .then((response) => console.log(response))\n      .catch((e) => console.log(`Couldn't track playlist: ${e}`))\n\n    return <Redirect to='/home' />\n  }\n\n  render() {\n    return(\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          Playlist ID:\n          <input type=\"text\" name=\"playlist_id\" value={this.state.playlist_id} onChange={this.handleInputChange} placeholder=\"(e.g. 'PL8g7AzKjYPsNWX5N1pYudn2OetM85N0GS')\" />\n        </label>\n        <label>\n          Default Playlist?\n          <input type=\"checkbox\" name=\"is_default\" checked={this.state.is_default} onChange={this.handleInputChange} />\n        </label>\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n    )\n  }\n}\n\nexport default TrackPlaylistForm;\n","import React from 'react';\n\nfunction PlaylistsManager(props) {\n  return(<h1>Playlists Manager</h1>);\n}\n\nexport default PlaylistsManager;","import React, { useState, useEffect }  from 'react';\nimport axios from 'axios';\nimport AppConstants from '../AppConstants';\nimport SearchField from 'react-search-field'\n\nconst List = props => (\n  <div className=\"list\">\n    <div className=\"list-header\">\n      {/* once we decide on a table structure, we can fill out the headers here */}\n    </div>\n\n    <div className=\"list-body\">\n      {\n        filteredList(props.queryString, props.list).map((item, index) => (\n          <ul key={index}>\n            <li>\n              <a href={`https://youtube.com/watch?v=${item.videoId}`}\n                 target=\"_blank\"\n                 rel=\"noopener noreferrer\">\n                {item.title}\n              </a>\n            </li>\n          </ul>\n        ))\n      }\n    </div>\n  </div>\n);\n\nfunction filteredList(queryString, list) {\n  return list.filter(item => matchingItem(item, queryString))\n}\n\nfunction matchingItem(item, queryString) {\n  if (queryString === \"\") { return true } \n  queryString = queryString.toLowerCase();\n  if (item.videoId.toString().toLowerCase().search(queryString) >= 0 ||\n    item.title.toString().toLowerCase().search(queryString) >= 0 ||\n    item.description.toString().toLowerCase().search(queryString) >= 0\n    ) {\n    return true;\n  }\n\n  return false;\n}\n\n\n\nfunction PlaylistsSearch(props) {\n  const [loadedVideos, setLoadedVideos] = useState([]);\n  const [queryString, setQueryString] = useState(\"\");\n\n  const handleInput = value => {\n    setQueryString(value);\n  }\n\n  function loadVideos() {\n    axios.get(AppConstants.APIEndpoints.TRACKED_VIDEOS)\n    .then(response => setLoadedVideos(response.data))\n    .catch(error => console.log(`Couldn't retrieve tracked videos: ${error}`))\n  }\n\n  useEffect(loadVideos, []);\n\n  return(\n    <div>\n      <SearchField onChange={handleInput} placeholder=\"Search Videos...\" />\n      <List queryString={queryString} list={loadedVideos} />\n    </div>\n    );\n}\n\nexport default PlaylistsSearch;","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  //Link\n} from \"react-router-dom\";\nimport ShufflePlayer from './pages/ShufflePlayer';\nimport TrackPlaylistForm from './pages/TrackPlaylistForm';\nimport PlaylistsManager  from './pages/PlaylistsManager';\nimport PlaylistsSearch   from './pages/PlaylistsSearch';\n\nexport default function AppRoot() {\n\n  return(\n    <Router>\n      <div>\n        <Switch>\n          <Route path=\"/track-new-playlist\">\n            <TrackPlaylistForm />\n          </Route>\n          <Route path=\"/manage\">\n            <PlaylistsManager />\n          </Route>\n          <Route path=\"/search\">\n            <PlaylistsSearch />\n          </Route>\n          <Route path=\"/\">\n            <ShufflePlayer />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './normalize.css';\nimport AppRoot from './AppRoot';\n\nReactDOM.render(<AppRoot />, document.getElementById(\"root\"));"],"sourceRoot":""}